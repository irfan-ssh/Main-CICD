name: CI_stage
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terragrunt_plan:
    name: Terraform with Terragrunt Plan
    runs-on: ubuntu-latest
    container:
      image: 'ghcr.io/irfan-ssh/terragrunt-docker-image:latest'
    env:
      TERRAGRUNT_TFPATH: /usr/local/bin/terraform
      tf_working_dir: '${{ inputs.DIRECTORY_PATH }}'

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Set Terragrunt and Terraform Versions 
        run: |
          TERRAGRUNT_VERSION=$(cat .terragrunt-version)
          echo "Using Terragrunt version: $TERRAGRUNT_VERSION"
          tgenv install $TERRAGRUNT_VERSION
          tgenv use $TERRAGRUNT_VERSION
          terragrunt --version

          TERRAFORM_VERSION=$(cat .terraform-version)
          echo "Using Terraform version: $TERRAFORM_VERSION"
          tfenv install $TERRAFORM_VERSION
          tfenv use $TERRAFORM_VERSION
          terraform --version
        working-directory: ./

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.STAGING_ACCOUNT_ID }}:role/${{ inputs.GHACTION_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run HCL Format
        run: terragrunt run-all hclfmt
        working-directory: '${{ env.tf_working_dir }}'

      - name: TERRAGRUNT INIT
        run: |
          echo "current working directory path:"
          terragrunt run-all init -terragrunt-provider-cache --terragrunt-non-interactive
          echo "Terragrunt run-all init completed."
        working-directory: '${{ env.tf_working_dir }}'

      - name: TERRAGRUNT PLAN
        run: |
          terragrunt run-all plan -no-color -out=plan.output --terragrunt-non-interactive
          terragrunt run-all show -no-color plan.output >> plan_output
        working-directory: '${{ env.tf_working_dir }}'

      - name: Upload plan artifact
        uses: actions/upload-artifact@v3
        with:
          name: terragrunt-plan
          path: |
            ${{ env.tf_working_dir }}/plan.output
            ${{ env.tf_working_dir }}/plan_output

    outputs:
      plan_created: ${{ steps.plan.outputs.plan_created }}

  call_cd_workflow:
    needs: terragrunt_plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/cd_terragrunt.yml@main
    with:
      STAGING_ACCOUNT_ID: ${{ inputs.STAGING_ACCOUNT_ID }}
      PRODUCTION_ACCOUNT_ID: ${{ inputs.PRODUCTION_ACCOUNT_ID }}
      ENABLE_PROD: ${{ inputs.ENABLE_PROD }}
      GHACTION_ROLE_NAME: ${{ inputs.GHACTION_ROLE_NAME }}
      DIRECTORY_PATH: ${{ inputs.DIRECTORY_PATH }}
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    permissions:
      id-token: write
      contents: read