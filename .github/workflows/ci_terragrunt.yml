name: CI_stage
on:
  workflow_call:
    inputs:
      STAGING_ACCOUNT_ID:
        required: true
        type: string
      PRODUCTION_ACCOUNT_ID:
        required: true
        type: string
      ENABLE_PROD:
        required: false
        type: string
      GHACTION_ROLE_NAME:
        required: false
        type: string
        default: github-oidc-role
      DIRECTORY_PATH:
        required: true
        type: string
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_REGION:
        required: true
      SSH_PRIVATE_KEY:
        required: true
    outputs:
      ci_run_id:
        description: "The run ID of this CI job"
        value: ${{ jobs.terragrunt.outputs.ci_run_id }}

jobs:
  terragrunt:
    name: Terraform with Terragrunt
    runs-on: ubuntu-latest
    container:
      image: 'ghcr.io/irfan-ssh/terragrunt-docker-image:latest'
    env:
      TERRAGRUNT_TFPATH: /usr/local/bin/terraform
      tf_working_dir: '${{ inputs.DIRECTORY_PATH }}'

    permissions:
      id-token: write
      contents: read

    outputs:
      ci_run_id: ${{ steps.output_run_id.outputs.ci_run_id }}

    steps:
      # (Previous steps remain unchanged)

      - name: TERRAGRUNT PLAN
        run: |
          terragrunt run-all plan -no-color -out=plan.output --terragrunt-non-interactive
          terragrunt run-all show -no-color plan.output >> plan_output
        working-directory: '${{ env.tf_working_dir }}'

      - name: Tar plan files
        run: tar -cvf terragrunt_plan.tar plan.output plan_output
        working-directory: ${{ env.tf_working_dir }}

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: terragrunt-plan
          path: ${{ env.tf_working_dir }}/terragrunt_plan.tar

      - name: Output Run ID
        id: output_run_id
        run: echo "ci_run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Get workflow run ID
        run: echo "WORKFLOW_RUN_ID=${{ github.run_id }}" >> $GITHUB_ENV