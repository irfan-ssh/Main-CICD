name: CI_stage
'on':
  workflow_call:
    inputs:
      STAGING_ACCOUNT_ID:
        required: true
        type: string
      PRODUCTION_ACCOUNT_ID:
        required: true
        type: string
      ENABLE_PROD:
        required: false
        type: string
      GHACTION_ROLE_NAME:
        required: false
        type: string
        default: github-oidc-role
      DIRECTORY_PATH:
        required: true
        type: string
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_REGION:
        required: true
      SSH_PRIVATE_KEY:
        required: true
jobs:
  terragrunt:
    name: Terraform with Terragrunt
    runs-on: ubuntu-latest
    container:
      image: 'ghcr.io/irfan-ssh/terragrunt-docker-image:latest'
    env:
      TERRAGRUNT_TFPATH: /usr/local/bin/terraform
      tf_working_dir: '${{ inputs.DIRECTORY_PATH }}'

    # Permissions
    permissions:
      # pull-requests: write
      id-token: write
      contents: read

    steps:
      # Code repositories checkout
      - name: Checkout code
        uses: actions/checkout@v3

        # Terraform setup
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

        # Terraform and Terragrunt version form the root files .terragrunt-version and .terraform-version
      - name: Set Terragrunt and Terraform Versions 
        run: |
          TERRAGRUNT_VERSION=$(cat .terragrunt-version)
          echo "Using Terragrunt version: $TERRAGRUNT_VERSION"
          tgenv install $TERRAGRUNT_VERSION
          tgenv use $TERRAGRUNT_VERSION
          terragrunt --version

          TERRAFORM_VERSION=$(cat .terraform-version)
          echo "Using Terraform version: $TERRAFORM_VERSION"
          tfenv install $TERRAFORM_VERSION
          tfenv use $TERRAFORM_VERSION
          terraform --version
        working-directory: ./

        # AWS credentials configure
      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: >-
            arn:aws:iam::${{ inputs.STAGING_ACCOUNT_ID }}:role/${{ inputs.GHACTION_ROLE_NAME }}
          role-session-name: GitHubActions
          aws-region: '${{ secrets.AWS_REGION }}'

        # Terrragrunt hclfm Format
      - name: Run HCL Format
        run: |
          terragrunt run-all hclfmt
        working-directory: '${{ env.tf_working_dir }}'

        # Terragrunt initializatinon
      - name: TERRAGRUNT INIT
        run: |
          echo "current working directory path:"
          terragrunt run-all init -terragrunt-provider-cache --terragrunt-non-interactive
          echo "Terragrunt run-all init completed."
        working-directory: '${{ env.tf_working_dir }}'

        # Terragrunt plan + plan.output + show plan_output
      - name: TERRAGRUNT PLAN
        run: |
          terragrunt run-all plan -no-color -out=plan.output --terragrunt-non-interactive
          terragrunt run-all show -no-color plan.output >> plan_output
        working-directory: '${{ env.tf_working_dir }}'

      - id: format-plan
        name: Format terragrunt plan to diff markdown
        uses: traveloka/ghaction/infracicd-plan-diff-markdown@feature/nbay-terragrunt-workflow
        with:
          path: '${{ env.tf_working_dir }}/plan_output'

      # - name: Post terragrunt command output onto pull request
      #   uses: traveloka/ghaction/infracicd-pr-comment@feature/nbay-terragrunt-workflow
      #   with:
      #     collapse-terraform-output: ${{ vars.COLLAPSE_TERRAFORM_OUTPUT == '' && 'false' || vars.COLLAPSE_TERRAFORM_OUTPUT }}
      #     environment: 'Production'
      #     pr-number: ${{ github.event.number }}
      #     terraform-command: 'plan'
      #     terraform-output: ${{ steps.format-plan.outputs.formatted }}
      #     working-dir: '${{ env.prd_plan_working_dir }}'

