name: CD_stage

'on':
  workflow_call:
    inputs:
      STAGING_ACCOUNT_ID:
        required: true
        type: string
      PRODUCTION_ACCOUNT_ID:
        required: true
        type: string
      ENABLE_PROD:
        required: false
        type: string
      GHACTION_ROLE_NAME:
        required: false
        type: string
        default: github-oidc-role
      DIRECTORY_PATH:
        required: true
        type: string
      CI_RUN_ID:
        required: true
        type: string
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_REGION:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      GH_PAT:
        required: true

jobs:
  terragrunt:
    name: Apply Terraform with Terragrunt
    runs-on: ubuntu-latest
    container:
      image: 'ghcr.io/irfan-ssh/terragrunt-docker-image:latest'
    env:
      TERRAGRUNT_TFPATH: /usr/local/bin/terraform
      tf_working_dir: '${{ inputs.DIRECTORY_PATH }}'
      GH_PAT: ${{ github.token }}
    permissions:
      id-token: write
      contents: read
    
    steps:
      # Repository checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # Terraform Setup
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # Set Terragrunt and Terraform Versions
      - name: Set Terragrunt and Terraform Versions from .terragrunt-version and .terraform-version
        run: |
          TERRAGRUNT_VERSION=$(cat .terragrunt-version)
          echo "Using Terragrunt version: $TERRAGRUNT_VERSION"
          tgenv install $TERRAGRUNT_VERSION
          tgenv use $TERRAGRUNT_VERSION
          terragrunt --version

          TERRAFORM_VERSION=$(cat .terraform-version)
          echo "Using Terraform version: $TERRAFORM_VERSION"
          tfenv install $TERRAFORM_VERSION
          tfenv use $TERRAFORM_VERSION
          terraform --version
        working-directory: ./

      # Configure AWS credentials using OIDC
      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: >-
            arn:aws:iam::${{ inputs.STAGING_ACCOUNT_ID }}:role/${{ inputs.GHACTION_ROLE_NAME }}
          role-session-name: GitHubActions
          aws-region: '${{ secrets.AWS_REGION }}'

      # Terragrunt Init
      - name: TERRAGRUNT INIT
        run: |
          echo "Current working directory path: ${{ env.tf_working_dir }}"
          terragrunt run-all init -terragrunt-provider-cache --terragrunt-non-interactive
          echo "Terragrunt run-all init completed."
        working-directory: '${{ env.tf_working_dir }}'

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: terragrunt-plan
          path: ${{ env.tf_working_dir }}
          github-token: ${{ secrets.GH_PAT }}
          repository: ${{ github.repository }}
          run-id: ${{ inputs.CI_RUN_ID }}

      - name: Untar plan files
        run: |
          tar -xvf terragrunt_plan.tar
          rm terragrunt_plan.tar
        working-directory: ${{ env.tf_working_dir }}

      - name: List downloaded files
        run: ls -la ${{ env.tf_working_dir }}

      - name: Check for plan files
        run: |
          if [ -f plan.output ] || [ -f plan_output ]; then
            echo "Plan file found"
          else
            echo "Plan file not found. Directory contents:"
            ls -la
            exit 1
          fi
        working-directory: ${{ env.tf_working_dir }}

      # Terragrunt Apply
      - name: TERRAGRUNT APPLY
        run: |
          if [ -f plan.output ]; then
            terragrunt run-all apply -no-color --terragrunt-non-interactive plan.output | tee apply.output
          elif [ -f plan_output ]; then
            terragrunt run-all apply -no-color --terragrunt-non-interactive plan_output | tee apply.output
          else
            echo "Neither plan.output nor plan_output file found. Contents of directory:"
            ls -la
            exit 1
          fi
        working-directory: '${{ env.tf_working_dir }}'
        
      # (Remaining steps unchanged)